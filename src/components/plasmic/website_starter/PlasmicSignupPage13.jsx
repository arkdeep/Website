// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9eShMHQiqbhQ86dWVmhWN6
// Component: OEh1Gf-kH7BR
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 9eShMHQiqbhQ86dWVmhWN6/projectcss
import sty from "./PlasmicSignupPage13.module.css"; // plasmic-import: OEh1Gf-kH7BR/css
import imageEp2An7L3A8C from "./images/image.png"; // plasmic-import: Ep2An7-L3a8C/picture
import icon72RapeiwfW0Y3G from "./images/icon72.svg"; // plasmic-import: rapeiwfW0y3G/picture
import icon7340VBfjsX5It from "./images/icon73.svg"; // plasmic-import: _40vBfjsX5IT/picture
import icon74Ea83QC3JZu from "./images/icon74.svg"; // plasmic-import: Ea8_-3qC3JZu/picture
import icon75Mct1Jl0Wo8Au from "./images/icon75.svg"; // plasmic-import: mct1JL0WO8AU/picture
import vector133Uk4A7Fs4XTmF from "./images/vector133.svg"; // plasmic-import: uk4a7FS4XTmF/picture
import vector1344GRkclggsyr from "./images/vector134.svg"; // plasmic-import: _4GRkclggsyr/picture
import vector135MAAiXcMa5EPq from "./images/vector135.svg"; // plasmic-import: mAAiXcMA5ePq/picture
import icon768KYsLjEwDkNf from "./images/icon76.svg"; // plasmic-import: 8kYSLjEWDkNf/picture
import image2FbzPv3GHmqLc from "./images/image2.png"; // plasmic-import: FBZPv3GHmqLc/picture

createPlasmicElementProxy;

export const PlasmicSignupPage13__VariantProps = new Array();

export const PlasmicSignupPage13__ArgProps = new Array();

const $$ = {};

function PlasmicSignupPage13__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"signUpPage1"}
            data-plasmic-override={overrides.signUpPage1}
            className={classNames(projectcss.all, sty.signUpPage1)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__g311E)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: imageEp2An7L3A8C,
                fullWidth: 1440,
                fullHeight: 1214,
                aspectRatio: undefined
              }}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000004295"}
              data-plasmic-override={overrides.frame1000004295}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000004295)}
            >
              <div
                data-plasmic-name={"joinAThrivingCommunityOfEngineers"}
                data-plasmic-override={
                  overrides.joinAThrivingCommunityOfEngineers
                }
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.joinAThrivingCommunityOfEngineers
                )}
              >
                {"Join a thriving community of Engineers  "}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0Wnn6
                )}
              >
                {"with UnBoxing Community"}
              </div>
            </Stack__>
            <div
              data-plasmic-name={"logo"}
              data-plasmic-override={overrides.logo}
              className={classNames(projectcss.all, sty.logo)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"logoUbc"}
                data-plasmic-override={overrides.logoUbc}
                hasGap={true}
                className={classNames(projectcss.all, sty.logoUbc)}
              >
                <div
                  data-plasmic-name={"frame3670"}
                  data-plasmic-override={overrides.frame3670}
                  className={classNames(projectcss.all, sty.frame3670)}
                >
                  <div
                    data-plasmic-name={"c"}
                    data-plasmic-override={overrides.c}
                    className={classNames(projectcss.all, sty.c)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__thTyX
                      )}
                    >
                      {"C"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"u"}
                    data-plasmic-override={overrides.u}
                    className={classNames(projectcss.all, sty.u)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tutU1
                      )}
                    >
                      {"U"}
                    </div>
                  </div>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame3664"}
                data-plasmic-override={overrides.frame3664}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame3664)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame3661"}
                  data-plasmic-override={overrides.frame3661}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame3661)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000004243"}
                    data-plasmic-override={overrides.frame1000004243}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000004243)}
                  >
                    <div
                      data-plasmic-name={"label"}
                      data-plasmic-override={overrides.label}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Enter First Name "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F27312" }}
                        >
                          {"*"}
                        </span>
                      </React.Fragment>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame484"}
                    data-plasmic-override={overrides.frame484}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame484)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7LyeV
                      )}
                    >
                      {"First Name"}
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame3662"}
                  data-plasmic-override={overrides.frame3662}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame3662)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame3663"}
                    data-plasmic-override={overrides.frame3663}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame3663)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1000004244"}
                      data-plasmic-override={overrides.frame1000004244}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000004244
                      )}
                    >
                      <div
                        data-plasmic-name={"label2"}
                        data-plasmic-override={overrides.label2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label2
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FFFFFF" }}
                          >
                            {"Enter Last Name "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#F27312" }}
                          >
                            {"*"}
                          </span>
                        </React.Fragment>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame485"}
                      data-plasmic-override={overrides.frame485}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame485)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gkiZc
                        )}
                      >
                        {"Full name"}
                      </div>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"dob"}
                    data-plasmic-override={overrides.dob}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.dob)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1000004245"}
                      data-plasmic-override={overrides.frame1000004245}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000004245
                      )}
                    >
                      <div
                        data-plasmic-name={"label3"}
                        data-plasmic-override={overrides.label3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label3
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FFFFFF" }}
                          >
                            {"Select DOB "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#F27312" }}
                          >
                            {"*"}
                          </span>
                        </React.Fragment>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame3667"}
                      data-plasmic-override={overrides.frame3667}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3667)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame3665"}
                        data-plasmic-override={overrides.frame3665}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3665)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__k8WgK
                          )}
                        >
                          {"Day"}
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__m9HV0)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: icon72RapeiwfW0Y3G,
                            fullWidth: 24,
                            fullHeight: 24,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame3666"}
                        data-plasmic-override={overrides.frame3666}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3666)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gMr93
                          )}
                        >
                          {"Month"}
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__xPvqr)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: icon7340VBfjsX5It,
                            fullWidth: 24,
                            fullHeight: 24,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame3668"}
                        data-plasmic-override={overrides.frame3668}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3668)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__epNl7
                          )}
                        >
                          {"Year"}
                        </div>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__hhS6Q)}
                          displayHeight={"24px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"24px"}
                          loading={"lazy"}
                          src={{
                            src: icon74Ea83QC3JZu,
                            fullWidth: 24,
                            fullHeight: 24,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"gender"}
                    data-plasmic-override={overrides.gender}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.gender)}
                  >
                    <div
                      data-plasmic-name={"label4"}
                      data-plasmic-override={overrides.label4}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label4
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#EFEFEF" }}
                        >
                          {"Select Gender "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F27312" }}
                        >
                          {"*"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1000004307"}
                      data-plasmic-override={overrides.frame1000004307}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000004307
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame488"}
                        data-plasmic-override={overrides.frame488}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame488)}
                      >
                        <div
                          data-plasmic-name={"freeBox"}
                          data-plasmic-override={overrides.freeBox}
                          className={classNames(projectcss.all, sty.freeBox)}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__bwp9I)}
                            displayHeight={"24px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"24px"}
                            loading={"lazy"}
                            src={{
                              src: icon75Mct1Jl0Wo8Au,
                              fullWidth: 24,
                              fullHeight: 24,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame3669"}
                        data-plasmic-override={overrides.frame3669}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3669)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"frame1000004304"}
                          data-plasmic-override={overrides.frame1000004304}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.frame1000004304
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b6Wyc
                            )}
                          >
                            {"Men"}
                          </div>
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__mvbQo)}
                            displayHeight={"2px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"480px"}
                            loading={"lazy"}
                            src={{
                              src: vector133Uk4A7Fs4XTmF,
                              fullWidth: 480,
                              fullHeight: 2,
                              aspectRatio: 240
                            }}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0L2C3
                            )}
                          >
                            {"Women"}
                          </div>
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__kgFlo)}
                            displayHeight={"2px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"480px"}
                            loading={"lazy"}
                            src={{
                              src: vector1344GRkclggsyr,
                              fullWidth: 480,
                              fullHeight: 2,
                              aspectRatio: 240
                            }}
                          />

                          <div
                            data-plasmic-name={"nonBinary"}
                            data-plasmic-override={overrides.nonBinary}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.nonBinary
                            )}
                          >
                            {"Non-Binary "}
                          </div>
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___8Fmf6)}
                            displayHeight={"2px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"480px"}
                            loading={"lazy"}
                            src={{
                              src: vector135MAAiXcMa5EPq,
                              fullWidth: 480,
                              fullHeight: 2,
                              aspectRatio: 240
                            }}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ievJe
                            )}
                          >
                            {"Other"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"occupation"}
                    data-plasmic-override={overrides.occupation}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.occupation)}
                  >
                    <div
                      data-plasmic-name={"label5"}
                      data-plasmic-override={overrides.label5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label5
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Select Employment status "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#F27312" }}
                        >
                          {"*"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame487"}
                      data-plasmic-override={overrides.frame487}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame487)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ouLbH
                        )}
                      >
                        {"Employment status"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hfDwh)}
                        displayHeight={"24px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"24px"}
                        loading={"lazy"}
                        src={{
                          src: icon768KYsLjEwDkNf,
                          fullWidth: 24,
                          fullHeight: 24,
                          aspectRatio: 1
                        }}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame3671"}
                  data-plasmic-override={overrides.frame3671}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame3671)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"checkBox"}
                    data-plasmic-override={overrides.checkBox}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.checkBox)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e4Q3Y
                      )}
                    >
                      {"Log into existing account"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"a"}
                    data-plasmic-name={"loginButton"}
                    data-plasmic-override={overrides.loginButton}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.loginButton
                    )}
                    href={`/new-page-5`}
                    target={"_blank"}
                    title={"1"}
                  >
                    <div
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Continue"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yC2Sj
                )}
              >
                {"UnBoxing Community"}
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"logo2"}
              data-plasmic-override={overrides.logo2}
              hasGap={true}
              className={classNames(projectcss.all, sty.logo2)}
            >
              <div
                data-plasmic-name={"logoUbc2"}
                data-plasmic-override={overrides.logoUbc2}
                className={classNames(projectcss.all, sty.logoUbc2)}
              >
                <div
                  data-plasmic-name={"c2"}
                  data-plasmic-override={overrides.c2}
                  className={classNames(projectcss.all, sty.c2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fvg4M
                    )}
                  >
                    {"C"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"u2"}
                  data-plasmic-override={overrides.u2}
                  className={classNames(projectcss.all, sty.u2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o6EEu
                    )}
                  >
                    {"U"}
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3LB7P
                )}
              >
                {"Back to\nUnBoxing"}
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__grfCz)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: image2FbzPv3GHmqLc,
                fullWidth: 922,
                fullHeight: 26,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "signUpPage1",
    "frame1000004295",
    "joinAThrivingCommunityOfEngineers",
    "logo",
    "logoUbc",
    "frame3670",
    "c",
    "u",
    "frame3664",
    "frame3661",
    "frame1000004243",
    "label",
    "frame484",
    "frame3662",
    "frame3663",
    "frame1000004244",
    "label2",
    "frame485",
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668",
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary",
    "occupation",
    "label5",
    "frame487",
    "frame3671",
    "checkBox",
    "loginButton",
    "button",
    "logo2",
    "logoUbc2",
    "c2",
    "u2"
  ],

  signUpPage1: [
    "signUpPage1",
    "frame1000004295",
    "joinAThrivingCommunityOfEngineers",
    "logo",
    "logoUbc",
    "frame3670",
    "c",
    "u",
    "frame3664",
    "frame3661",
    "frame1000004243",
    "label",
    "frame484",
    "frame3662",
    "frame3663",
    "frame1000004244",
    "label2",
    "frame485",
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668",
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary",
    "occupation",
    "label5",
    "frame487",
    "frame3671",
    "checkBox",
    "loginButton",
    "button",
    "logo2",
    "logoUbc2",
    "c2",
    "u2"
  ],

  frame1000004295: ["frame1000004295", "joinAThrivingCommunityOfEngineers"],
  joinAThrivingCommunityOfEngineers: ["joinAThrivingCommunityOfEngineers"],
  logo: [
    "logo",
    "logoUbc",
    "frame3670",
    "c",
    "u",
    "frame3664",
    "frame3661",
    "frame1000004243",
    "label",
    "frame484",
    "frame3662",
    "frame3663",
    "frame1000004244",
    "label2",
    "frame485",
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668",
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary",
    "occupation",
    "label5",
    "frame487",
    "frame3671",
    "checkBox",
    "loginButton",
    "button"
  ],

  logoUbc: ["logoUbc", "frame3670", "c", "u"],
  frame3670: ["frame3670", "c", "u"],
  c: ["c"],
  u: ["u"],
  frame3664: [
    "frame3664",
    "frame3661",
    "frame1000004243",
    "label",
    "frame484",
    "frame3662",
    "frame3663",
    "frame1000004244",
    "label2",
    "frame485",
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668",
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary",
    "occupation",
    "label5",
    "frame487",
    "frame3671",
    "checkBox",
    "loginButton",
    "button"
  ],

  frame3661: ["frame3661", "frame1000004243", "label", "frame484"],
  frame1000004243: ["frame1000004243", "label"],
  label: ["label"],
  frame484: ["frame484"],
  frame3662: [
    "frame3662",
    "frame3663",
    "frame1000004244",
    "label2",
    "frame485",
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668",
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary",
    "occupation",
    "label5",
    "frame487"
  ],

  frame3663: ["frame3663", "frame1000004244", "label2", "frame485"],
  frame1000004244: ["frame1000004244", "label2"],
  label2: ["label2"],
  frame485: ["frame485"],
  dob: [
    "dob",
    "frame1000004245",
    "label3",
    "frame3667",
    "frame3665",
    "frame3666",
    "frame3668"
  ],

  frame1000004245: ["frame1000004245", "label3"],
  label3: ["label3"],
  frame3667: ["frame3667", "frame3665", "frame3666", "frame3668"],
  frame3665: ["frame3665"],
  frame3666: ["frame3666"],
  frame3668: ["frame3668"],
  gender: [
    "gender",
    "label4",
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary"
  ],

  label4: ["label4"],
  frame1000004307: [
    "frame1000004307",
    "frame488",
    "freeBox",
    "frame3669",
    "frame1000004304",
    "nonBinary"
  ],

  frame488: ["frame488", "freeBox"],
  freeBox: ["freeBox"],
  frame3669: ["frame3669", "frame1000004304", "nonBinary"],
  frame1000004304: ["frame1000004304", "nonBinary"],
  nonBinary: ["nonBinary"],
  occupation: ["occupation", "label5", "frame487"],
  label5: ["label5"],
  frame487: ["frame487"],
  frame3671: ["frame3671", "checkBox", "loginButton", "button"],
  checkBox: ["checkBox"],
  loginButton: ["loginButton", "button"],
  button: ["button"],
  logo2: ["logo2", "logoUbc2", "c2", "u2"],
  logoUbc2: ["logoUbc2", "c2", "u2"],
  c2: ["c2"],
  u2: ["u2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSignupPage13__ArgProps,
          internalVariantPropNames: PlasmicSignupPage13__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSignupPage13__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSignupPage13";
  } else {
    func.displayName = `PlasmicSignupPage13.${nodeName}`;
  }
  return func;
}

export const PlasmicSignupPage13 = Object.assign(
  // Top-level PlasmicSignupPage13 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    signUpPage1: makeNodeComponent("signUpPage1"),
    frame1000004295: makeNodeComponent("frame1000004295"),
    joinAThrivingCommunityOfEngineers: makeNodeComponent(
      "joinAThrivingCommunityOfEngineers"
    ),
    logo: makeNodeComponent("logo"),
    logoUbc: makeNodeComponent("logoUbc"),
    frame3670: makeNodeComponent("frame3670"),
    c: makeNodeComponent("c"),
    u: makeNodeComponent("u"),
    frame3664: makeNodeComponent("frame3664"),
    frame3661: makeNodeComponent("frame3661"),
    frame1000004243: makeNodeComponent("frame1000004243"),
    label: makeNodeComponent("label"),
    frame484: makeNodeComponent("frame484"),
    frame3662: makeNodeComponent("frame3662"),
    frame3663: makeNodeComponent("frame3663"),
    frame1000004244: makeNodeComponent("frame1000004244"),
    label2: makeNodeComponent("label2"),
    frame485: makeNodeComponent("frame485"),
    dob: makeNodeComponent("dob"),
    frame1000004245: makeNodeComponent("frame1000004245"),
    label3: makeNodeComponent("label3"),
    frame3667: makeNodeComponent("frame3667"),
    frame3665: makeNodeComponent("frame3665"),
    frame3666: makeNodeComponent("frame3666"),
    frame3668: makeNodeComponent("frame3668"),
    gender: makeNodeComponent("gender"),
    label4: makeNodeComponent("label4"),
    frame1000004307: makeNodeComponent("frame1000004307"),
    frame488: makeNodeComponent("frame488"),
    freeBox: makeNodeComponent("freeBox"),
    frame3669: makeNodeComponent("frame3669"),
    frame1000004304: makeNodeComponent("frame1000004304"),
    nonBinary: makeNodeComponent("nonBinary"),
    occupation: makeNodeComponent("occupation"),
    label5: makeNodeComponent("label5"),
    frame487: makeNodeComponent("frame487"),
    frame3671: makeNodeComponent("frame3671"),
    checkBox: makeNodeComponent("checkBox"),
    loginButton: makeNodeComponent("loginButton"),
    button: makeNodeComponent("button"),
    logo2: makeNodeComponent("logo2"),
    logoUbc2: makeNodeComponent("logoUbc2"),
    c2: makeNodeComponent("c2"),
    u2: makeNodeComponent("u2"),
    // Metadata about props expected for PlasmicSignupPage13
    internalVariantProps: PlasmicSignupPage13__VariantProps,
    internalArgProps: PlasmicSignupPage13__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSignupPage13;
/* prettier-ignore-end */
