// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9eShMHQiqbhQ86dWVmhWN6
// Component: U5EmY8sFP-ud
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 9eShMHQiqbhQ86dWVmhWN6/projectcss
import sty from "./PlasmicOtpError.module.css"; // plasmic-import: U5EmY8sFP-ud/css
import Group1Icon from "./icons/PlasmicIcon__Group1"; // plasmic-import: qRfkE60ftApl/icon
import imageEp2An7L3A8C from "./images/image.png"; // plasmic-import: Ep2An7-L3a8C/picture
import frame36662RnVzaaWqak from "./images/frame3666.svg"; // plasmic-import: 2RN-vzaaWQAK/picture
import frame3667RoybckYZxaHq from "./images/frame3667.svg"; // plasmic-import: roybckYZxaHQ/picture
import frame36680EByzCOerLd from "./images/frame3668.svg"; // plasmic-import: 0E-ByzCOerLd/picture
import frame3669IswPffzGJfgX from "./images/frame3669.svg"; // plasmic-import: ISWPffzGJfgX/picture
import image2FbzPv3GHmqLc from "./images/image2.png"; // plasmic-import: FBZPv3GHmqLc/picture

createPlasmicElementProxy;

export const PlasmicOtpError__VariantProps = new Array();

export const PlasmicOtpError__ArgProps = new Array();

const $$ = {};

function PlasmicOtpError__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"otpError"}
            data-plasmic-override={overrides.otpError}
            className={classNames(projectcss.all, sty.otpError)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__fBHp)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: imageEp2An7L3A8C,
                fullWidth: 1440,
                fullHeight: 1214,
                aspectRatio: undefined
              }}
            />

            <div
              data-plasmic-name={"joinAThrivingCommunityOfEngineers"}
              data-plasmic-override={
                overrides.joinAThrivingCommunityOfEngineers
              }
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.joinAThrivingCommunityOfEngineers
              )}
            >
              {"Join a thriving community of Engineers  "}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__grX7U
              )}
            >
              {"with UnBoxing Community"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame3664"}
              data-plasmic-override={overrides.frame3664}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame3664)}
            >
              <div
                data-plasmic-name={"checkBox"}
                data-plasmic-override={overrides.checkBox}
                className={classNames(projectcss.all, sty.checkBox)}
              >
                <div
                  data-plasmic-name={"weHaveSentYouA4DigitOtp"}
                  data-plasmic-override={overrides.weHaveSentYouA4DigitOtp}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.weHaveSentYouA4DigitOtp
                  )}
                >
                  {"We have sent you a 4-digit OTP "}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"checkBox2"}
                  data-plasmic-override={overrides.checkBox2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.checkBox2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__prEn5
                    )}
                  >
                    {"to +91-9876 543 210"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i15J
                    )}
                  >
                    {"Resend OTP?"}
                  </div>
                </Stack__>
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame3662"}
                data-plasmic-override={overrides.frame3662}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame3662)}
              >
                <div
                  data-plasmic-name={"frame3666"}
                  data-plasmic-override={overrides.frame3666}
                  className={classNames(projectcss.all, sty.frame3666)}
                >
                  <div
                    data-plasmic-name={"label"}
                    data-plasmic-override={overrides.label}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Enter OTP "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#F27312" }}
                      >
                        {"*"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame3756"}
                    data-plasmic-override={overrides.frame3756}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame3756)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame3757"}
                      data-plasmic-override={overrides.frame3757}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3757)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame3752"}
                        data-plasmic-override={overrides.frame3752}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame3752)}
                      >
                        <Stack__
                          as={PlasmicImg__}
                          hasGap={true}
                          alt={""}
                          className={classNames(sty.img__nbAVc)}
                          displayHeight={"50px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"50px"}
                          loading={"lazy"}
                          src={{
                            src: frame36662RnVzaaWqak,
                            fullWidth: 50,
                            fullHeight: 50,
                            aspectRatio: 1
                          }}
                        />

                        <Stack__
                          as={PlasmicImg__}
                          hasGap={true}
                          alt={""}
                          className={classNames(sty.img__hrVz6)}
                          displayHeight={"50px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"50px"}
                          loading={"lazy"}
                          src={{
                            src: frame3667RoybckYZxaHq,
                            fullWidth: 50,
                            fullHeight: 50,
                            aspectRatio: 1
                          }}
                        />

                        <Stack__
                          as={PlasmicImg__}
                          hasGap={true}
                          alt={""}
                          className={classNames(sty.img__yoShK)}
                          displayHeight={"50px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"50px"}
                          loading={"lazy"}
                          src={{
                            src: frame36680EByzCOerLd,
                            fullWidth: 50,
                            fullHeight: 50,
                            aspectRatio: 1
                          }}
                        />

                        <Stack__
                          as={PlasmicImg__}
                          hasGap={true}
                          alt={""}
                          className={classNames(sty.img__jJWgE)}
                          displayHeight={"50px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"50px"}
                          loading={"lazy"}
                          src={{
                            src: frame3669IswPffzGJfgX,
                            fullWidth: 50,
                            fullHeight: 50,
                            aspectRatio: 1
                          }}
                        />
                      </Stack__>
                      <div
                        data-plasmic-name={"passwordHideAndSee"}
                        data-plasmic-override={overrides.passwordHideAndSee}
                        className={classNames(
                          projectcss.all,
                          sty.passwordHideAndSee
                        )}
                      >
                        <Group1Icon
                          data-plasmic-name={"svg"}
                          data-plasmic-override={overrides.svg}
                          className={classNames(projectcss.all, sty.svg)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame3750"}
                      data-plasmic-override={overrides.frame3750}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame3750)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mNjqO
                        )}
                      >
                        {"Wrong OTP"}
                      </div>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame3665"}
                data-plasmic-override={overrides.frame3665}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame3665)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"checkBox3"}
                  data-plasmic-override={overrides.checkBox3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.checkBox3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9HDo
                    )}
                  >
                    {"Back"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"loginButton"}
                  data-plasmic-override={overrides.loginButton}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.loginButton)}
                >
                  <div
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Verify"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              data-plasmic-name={"logo"}
              data-plasmic-override={overrides.logo}
              className={classNames(projectcss.all, sty.logo)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"logoUbc"}
                data-plasmic-override={overrides.logoUbc}
                hasGap={true}
                className={classNames(projectcss.all, sty.logoUbc)}
              >
                <div
                  data-plasmic-name={"frame3663"}
                  data-plasmic-override={overrides.frame3663}
                  className={classNames(projectcss.all, sty.frame3663)}
                >
                  <div
                    data-plasmic-name={"c"}
                    data-plasmic-override={overrides.c}
                    className={classNames(projectcss.all, sty.c)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fDOoq
                      )}
                    >
                      {"C"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"u"}
                    data-plasmic-override={overrides.u}
                    className={classNames(projectcss.all, sty.u)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aTum7
                      )}
                    >
                      {"U"}
                    </div>
                  </div>
                </div>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mEql
                )}
              >
                {"UnBoxing Community"}
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"logo2"}
              data-plasmic-override={overrides.logo2}
              hasGap={true}
              className={classNames(projectcss.all, sty.logo2)}
            >
              <div
                data-plasmic-name={"logoUbc2"}
                data-plasmic-override={overrides.logoUbc2}
                className={classNames(projectcss.all, sty.logoUbc2)}
              >
                <div
                  data-plasmic-name={"c2"}
                  data-plasmic-override={overrides.c2}
                  className={classNames(projectcss.all, sty.c2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nykSs
                    )}
                  >
                    {"C"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"u2"}
                  data-plasmic-override={overrides.u2}
                  className={classNames(projectcss.all, sty.u2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rMxR4
                    )}
                  >
                    {"U"}
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oGa9T
                )}
              >
                {"Back to\nUnBoxing"}
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__eSee)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: image2FbzPv3GHmqLc,
                fullWidth: 922,
                fullHeight: 26,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "otpError",
    "joinAThrivingCommunityOfEngineers",
    "frame3664",
    "checkBox",
    "weHaveSentYouA4DigitOtp",
    "checkBox2",
    "frame3662",
    "frame3666",
    "label",
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750",
    "frame3665",
    "checkBox3",
    "loginButton",
    "button",
    "logo",
    "logoUbc",
    "frame3663",
    "c",
    "u",
    "logo2",
    "logoUbc2",
    "c2",
    "u2"
  ],

  otpError: [
    "otpError",
    "joinAThrivingCommunityOfEngineers",
    "frame3664",
    "checkBox",
    "weHaveSentYouA4DigitOtp",
    "checkBox2",
    "frame3662",
    "frame3666",
    "label",
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750",
    "frame3665",
    "checkBox3",
    "loginButton",
    "button",
    "logo",
    "logoUbc",
    "frame3663",
    "c",
    "u",
    "logo2",
    "logoUbc2",
    "c2",
    "u2"
  ],

  joinAThrivingCommunityOfEngineers: ["joinAThrivingCommunityOfEngineers"],
  frame3664: [
    "frame3664",
    "checkBox",
    "weHaveSentYouA4DigitOtp",
    "checkBox2",
    "frame3662",
    "frame3666",
    "label",
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750",
    "frame3665",
    "checkBox3",
    "loginButton",
    "button"
  ],

  checkBox: ["checkBox", "weHaveSentYouA4DigitOtp", "checkBox2"],
  weHaveSentYouA4DigitOtp: ["weHaveSentYouA4DigitOtp"],
  checkBox2: ["checkBox2"],
  frame3662: [
    "frame3662",
    "frame3666",
    "label",
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750"
  ],

  frame3666: [
    "frame3666",
    "label",
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750"
  ],

  label: ["label"],
  frame3756: [
    "frame3756",
    "frame3757",
    "frame3752",
    "passwordHideAndSee",
    "svg",
    "frame3750"
  ],

  frame3757: ["frame3757", "frame3752", "passwordHideAndSee", "svg"],
  frame3752: ["frame3752"],
  passwordHideAndSee: ["passwordHideAndSee", "svg"],
  svg: ["svg"],
  frame3750: ["frame3750"],
  frame3665: ["frame3665", "checkBox3", "loginButton", "button"],
  checkBox3: ["checkBox3"],
  loginButton: ["loginButton", "button"],
  button: ["button"],
  logo: ["logo", "logoUbc", "frame3663", "c", "u"],
  logoUbc: ["logoUbc", "frame3663", "c", "u"],
  frame3663: ["frame3663", "c", "u"],
  c: ["c"],
  u: ["u"],
  logo2: ["logo2", "logoUbc2", "c2", "u2"],
  logoUbc2: ["logoUbc2", "c2", "u2"],
  c2: ["c2"],
  u2: ["u2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicOtpError__ArgProps,
          internalVariantPropNames: PlasmicOtpError__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicOtpError__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicOtpError";
  } else {
    func.displayName = `PlasmicOtpError.${nodeName}`;
  }
  return func;
}

export const PlasmicOtpError = Object.assign(
  // Top-level PlasmicOtpError renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    otpError: makeNodeComponent("otpError"),
    joinAThrivingCommunityOfEngineers: makeNodeComponent(
      "joinAThrivingCommunityOfEngineers"
    ),
    frame3664: makeNodeComponent("frame3664"),
    checkBox: makeNodeComponent("checkBox"),
    weHaveSentYouA4DigitOtp: makeNodeComponent("weHaveSentYouA4DigitOtp"),
    checkBox2: makeNodeComponent("checkBox2"),
    frame3662: makeNodeComponent("frame3662"),
    frame3666: makeNodeComponent("frame3666"),
    label: makeNodeComponent("label"),
    frame3756: makeNodeComponent("frame3756"),
    frame3757: makeNodeComponent("frame3757"),
    frame3752: makeNodeComponent("frame3752"),
    passwordHideAndSee: makeNodeComponent("passwordHideAndSee"),
    svg: makeNodeComponent("svg"),
    frame3750: makeNodeComponent("frame3750"),
    frame3665: makeNodeComponent("frame3665"),
    checkBox3: makeNodeComponent("checkBox3"),
    loginButton: makeNodeComponent("loginButton"),
    button: makeNodeComponent("button"),
    logo: makeNodeComponent("logo"),
    logoUbc: makeNodeComponent("logoUbc"),
    frame3663: makeNodeComponent("frame3663"),
    c: makeNodeComponent("c"),
    u: makeNodeComponent("u"),
    logo2: makeNodeComponent("logo2"),
    logoUbc2: makeNodeComponent("logoUbc2"),
    c2: makeNodeComponent("c2"),
    u2: makeNodeComponent("u2"),
    // Metadata about props expected for PlasmicOtpError
    internalVariantProps: PlasmicOtpError__VariantProps,
    internalArgProps: PlasmicOtpError__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicOtpError;
/* prettier-ignore-end */
